#!/bin/bash
#
# Takes 3 parameters, 
# 1st comma separated list of repos for which you want to pull code from "origin"
# 2nd comma separated list of repos for which you want to pull code from "upstream"
# 3rd relative path of gateway folder
# You'll need to change value of variable "svnSiqRepoPath" to set path of gateway folder relative to git hub Root folder

. mypaths.sh

pushd .
cd $gitHome

localUpdatedRepos=""
upstreamUpdatedRepos=""


if [ $1 ]; then localRepos="$1"; fi
if [ $2 ]; then upstreamRepos="$2"; fi
if [ $3 ]; then svnSiqRepoPath="$3"; fi

localArr=$(echo $localRepos | tr "," "\n")
upstreamArr=$(echo $upstreamRepos | tr "," "\n")

function quit  {
	if [ "$1" ]; then echo "Error Message: $1"; fi

	for x in $localArr
	do
		if [ -f ~/tmppull$x.txt ]; then 
			grep_output="$(grep "Already up-to-date." ~/tmppull$x.txt)"
			if [ -z "$grep_output" ]; then
				localUpdatedRepos=${localUpdatedRepos}" ,"$x
			fi 
			Echo -ne Pull result for $x:" "  
			cat ~/tmppull$x.txt
			rm ~/tmppull$x.txt
		fi
	done

	for x in $upstreamArr
	do
		if [ -f ~/tmpfetch$x.txt ]; then 
			grep_output="$(grep "Already up-to-date." ~/tmpfetch$x.txt)"
			if [ -z "$grep_output" ]; then
				upstreamUpdatedRepos=${upstreamUpdatedRepos}" ,"$x
			fi
			Echo -ne Fetch result for $x:" "  
			cat ~/tmpfetch$x.txt
			rm ~/tmpfetch$x.txt
		fi
	done

	if [ "$localUpdatedRepos" != "" ]; then
		echo -------------Repos updated locally-------------
		echo $localUpdatedRepos
		echo -----------------------------------------------
	fi
	if [ "$upstreamUpdatedRepos" != "" ]; then
		echo ---------------Repos updated from upstream ----------------
		echo You may want to push these changes to your local fork
		echo $upstreamUpdatedRepos
		echo -----------------------------------------------------------
	fi

	popd
	exit 0 
}

echo Updating Local Repos [$localRepos]

function pullProject {
	cd $1
	if [ $? -ne 0 ]; then quit; fi
	git pull &> ~/tmppull$1.txt 
	cd - &> /dev/null
}

function fetchProject {
	cd $1
	if [ $? -ne 0 ]; then quit; fi
	git fetch upstream
	git merge upstream/master &> ~/tmpfetch$1.txt
	cd - &> /dev/null
}

for x in $localArr
do
	pullProject $x &
done
wait

echo Updating Repos from upstream [$upstreamRepos]

for x in $upstreamArr
do
	fetchProject $x &
done
wait

echo
echo Updating Gateway
pwd
cd $svnSiqRepoPath	
if [ $? -ne 0 ]; then quit; fi
svn update
if [ $? -ne 0 ]; then
	quit "Unable to update gateway code."
fi

quit
